services:
  salesservice:
    build:
      context: ./SalesService
      dockerfile: Dockerfile
    ports:
      - "5002:8080"
    depends_on:
      - sqlserver-sales
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver-sales,1433;Database=SalesDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;

  stockservice:
    build:
      context: ./StockService
      dockerfile: Dockerfile
    ports:
      - "5001:8080"
    depends_on:
      - sqlserver-stock
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver-stock,1433;Database=StockDb;User Id=sa;Password=YourStrong!Passw0rd;TrustServerCertificate=True;

  apigateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      - salesservice
      - stockservice

  sqlserver-sales:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-sales
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
    ports:
      - "1435:1433"
    volumes:
      - sqlserver_sales_data:/var/opt/mssql

  sqlserver-stock:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver-stock
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
    ports:
      - "1434:1433"
    volumes:
      - sqlserver_stock_data:/var/opt/mssql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  sqlserver_sales_data:
  sqlserver_stock_data: